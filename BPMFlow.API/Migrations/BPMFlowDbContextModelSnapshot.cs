// <auto-generated />
using System;
using BPMFlow.Infrastructure.Data.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BPMFlow.API.Migrations
{
    [DbContext(typeof(BPMFlowDbContext))]
    partial class BPMFlowDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BPMFlow.Domain.Models.Entities.BPMFlow.AssignedRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateStart")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int?>("EntityStatusId")
                        .HasColumnType("int");

                    b.Property<int?>("GroupRequestId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int?>("PeriodId")
                        .HasColumnType("int");

                    b.Property<int?>("RequestStatusId")
                        .HasColumnType("int");

                    b.Property<int?>("ResponsibleEmployeeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EntityStatusId");

                    b.HasIndex("GroupRequestId");

                    b.HasIndex("RequestStatusId");

                    b.ToTable("AssignedRequests");
                });

            modelBuilder.Entity("BPMFlow.Domain.Models.Entities.BPMFlow.BusinessProcess", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("BusinessProcess");
                });

            modelBuilder.Entity("BPMFlow.Domain.Models.Entities.BPMFlow.GroupRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("BusinessProcessId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BusinessProcessId");

                    b.ToTable("GroupRequests");
                });

            modelBuilder.Entity("BPMFlow.Domain.Models.Entities.BPMFlow.RequestStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("GroupRequestId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ResponsibleRoleId")
                        .HasColumnType("int");

                    b.Property<int?>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GroupRequestId");

                    b.HasIndex("RoleId");

                    b.ToTable("RequestStatuses");
                });

            modelBuilder.Entity("BPMFlow.Domain.Models.Entities.BPMFlow.RequestStatusTransition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("GroupRequestId")
                        .HasColumnType("int");

                    b.Property<bool>("IsNextStageTransition")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NextStatusId")
                        .HasColumnType("int");

                    b.Property<int?>("RequestStatusId")
                        .HasColumnType("int");

                    b.Property<int?>("ResponsibleRoleId")
                        .HasColumnType("int");

                    b.Property<int?>("RoleId")
                        .HasColumnType("int");

                    b.Property<bool>("SkipValidation")
                        .HasColumnType("bit");

                    b.Property<int?>("SourceStatusId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GroupRequestId");

                    b.HasIndex("RequestStatusId");

                    b.HasIndex("RoleId");

                    b.ToTable("RequestStatusTransitions");
                });

            modelBuilder.Entity("BPMFlow.Domain.Models.Entities.BPMFlow.RequestStatusesOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("GroupRequestId")
                        .HasColumnType("int");

                    b.Property<bool>("IsFinalStatus")
                        .HasColumnType("bit");

                    b.Property<int?>("RequestStatusId")
                        .HasColumnType("int");

                    b.Property<int?>("StatusOrder")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GroupRequestId");

                    b.HasIndex("RequestStatusId");

                    b.ToTable("RequestStatusesOrders");
                });

            modelBuilder.Entity("BPMFlow.Domain.Models.Entities.PerfManagement1.Action", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Action");
                });

            modelBuilder.Entity("BPMFlow.Domain.Models.Entities.PerfManagement1.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AdmManager")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("AmountSubordinate")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Birthday")
                        .HasColumnType("datetime2");

                    b.Property<int?>("BlockNum")
                        .HasColumnType("int");

                    b.Property<string>("BonusType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fio")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FuncManager")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Gender")
                        .HasColumnType("bit");

                    b.Property<int?>("HeadOffice")
                        .HasColumnType("int");

                    b.Property<DateTime?>("HireDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsManager")
                        .HasColumnType("bit");

                    b.Property<bool>("IsStaffMember")
                        .HasColumnType("bit");

                    b.Property<int?>("Levels")
                        .HasColumnType("int");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Parent")
                        .HasColumnType("int");

                    b.Property<string>("Parents")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhotoUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PositionNum")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SpId")
                        .HasColumnType("int");

                    b.Property<int?>("State")
                        .HasColumnType("int");

                    b.Property<string>("TabNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UnitManager")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UnitNum")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UnitParentNum")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Employee");
                });

            modelBuilder.Entity("BPMFlow.Domain.Models.Entities.PerfManagement1.EmployeeRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int?>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("RoleId");

                    b.ToTable("EmployeeRole");
                });

            modelBuilder.Entity("BPMFlow.Domain.Models.Entities.PerfManagement1.EntityStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EntityStatus");
                });

            modelBuilder.Entity("BPMFlow.Domain.Models.Entities.PerfManagement1.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("RoleTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("RoleTypeId");

                    b.ToTable("Role");
                });

            modelBuilder.Entity("BPMFlow.Domain.Models.Entities.PerfManagement1.RoleAllowedAction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ActionId")
                        .HasColumnType("int");

                    b.Property<int?>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ActionId");

                    b.HasIndex("RoleId");

                    b.ToTable("RoleAllowedAction");
                });

            modelBuilder.Entity("BPMFlow.Domain.Models.Entities.PerfManagement1.RoleType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RoleType");
                });

            modelBuilder.Entity("BPMFlow.Domain.Models.Entities.BPMFlow.AssignedRequest", b =>
                {
                    b.HasOne("BPMFlow.Domain.Models.Entities.PerfManagement1.EntityStatus", "EntityStatuse")
                        .WithMany("AssignedRequests")
                        .HasForeignKey("EntityStatusId");

                    b.HasOne("BPMFlow.Domain.Models.Entities.BPMFlow.GroupRequest", "GroupRequest")
                        .WithMany("AssignedRequests")
                        .HasForeignKey("GroupRequestId");

                    b.HasOne("BPMFlow.Domain.Models.Entities.BPMFlow.RequestStatus", "RequestStatuse")
                        .WithMany("AssignedRequests")
                        .HasForeignKey("RequestStatusId");

                    b.Navigation("EntityStatuse");

                    b.Navigation("GroupRequest");

                    b.Navigation("RequestStatuse");
                });

            modelBuilder.Entity("BPMFlow.Domain.Models.Entities.BPMFlow.GroupRequest", b =>
                {
                    b.HasOne("BPMFlow.Domain.Models.Entities.BPMFlow.BusinessProcess", "BusinessProcess")
                        .WithMany("GroupRequests")
                        .HasForeignKey("BusinessProcessId");

                    b.Navigation("BusinessProcess");
                });

            modelBuilder.Entity("BPMFlow.Domain.Models.Entities.BPMFlow.RequestStatus", b =>
                {
                    b.HasOne("BPMFlow.Domain.Models.Entities.BPMFlow.GroupRequest", "GroupRequest")
                        .WithMany("RequestStatuses")
                        .HasForeignKey("GroupRequestId");

                    b.HasOne("BPMFlow.Domain.Models.Entities.PerfManagement1.Role", "Role")
                        .WithMany("RequestStatuses")
                        .HasForeignKey("RoleId");

                    b.Navigation("GroupRequest");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("BPMFlow.Domain.Models.Entities.BPMFlow.RequestStatusTransition", b =>
                {
                    b.HasOne("BPMFlow.Domain.Models.Entities.BPMFlow.GroupRequest", "GroupRequest")
                        .WithMany("RequestStatusTransitions")
                        .HasForeignKey("GroupRequestId");

                    b.HasOne("BPMFlow.Domain.Models.Entities.BPMFlow.RequestStatus", "RequestStatus")
                        .WithMany("RequestStatusTransitions")
                        .HasForeignKey("RequestStatusId");

                    b.HasOne("BPMFlow.Domain.Models.Entities.PerfManagement1.Role", "Role")
                        .WithMany("RequestStatusTransitions")
                        .HasForeignKey("RoleId");

                    b.Navigation("GroupRequest");

                    b.Navigation("RequestStatus");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("BPMFlow.Domain.Models.Entities.BPMFlow.RequestStatusesOrder", b =>
                {
                    b.HasOne("BPMFlow.Domain.Models.Entities.BPMFlow.GroupRequest", "GroupRequest")
                        .WithMany("RequestStatusesOrders")
                        .HasForeignKey("GroupRequestId");

                    b.HasOne("BPMFlow.Domain.Models.Entities.BPMFlow.RequestStatus", "RequestStatus")
                        .WithMany("RequestStatusesOrders")
                        .HasForeignKey("RequestStatusId");

                    b.Navigation("GroupRequest");

                    b.Navigation("RequestStatus");
                });

            modelBuilder.Entity("BPMFlow.Domain.Models.Entities.PerfManagement1.EmployeeRole", b =>
                {
                    b.HasOne("BPMFlow.Domain.Models.Entities.PerfManagement1.Employee", "Employee")
                        .WithMany("EmployeeRoles")
                        .HasForeignKey("EmployeeId");

                    b.HasOne("BPMFlow.Domain.Models.Entities.PerfManagement1.Role", "Role")
                        .WithMany("EmployeeRoles")
                        .HasForeignKey("RoleId");

                    b.Navigation("Employee");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("BPMFlow.Domain.Models.Entities.PerfManagement1.Role", b =>
                {
                    b.HasOne("BPMFlow.Domain.Models.Entities.PerfManagement1.RoleType", "RoleType")
                        .WithMany("Roles")
                        .HasForeignKey("RoleTypeId");

                    b.Navigation("RoleType");
                });

            modelBuilder.Entity("BPMFlow.Domain.Models.Entities.PerfManagement1.RoleAllowedAction", b =>
                {
                    b.HasOne("BPMFlow.Domain.Models.Entities.PerfManagement1.Action", "Action")
                        .WithMany("RoleAllowedActions")
                        .HasForeignKey("ActionId");

                    b.HasOne("BPMFlow.Domain.Models.Entities.PerfManagement1.Role", "Role")
                        .WithMany("RoleAllowedActions")
                        .HasForeignKey("RoleId");

                    b.Navigation("Action");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("BPMFlow.Domain.Models.Entities.BPMFlow.BusinessProcess", b =>
                {
                    b.Navigation("GroupRequests");
                });

            modelBuilder.Entity("BPMFlow.Domain.Models.Entities.BPMFlow.GroupRequest", b =>
                {
                    b.Navigation("AssignedRequests");

                    b.Navigation("RequestStatusTransitions");

                    b.Navigation("RequestStatuses");

                    b.Navigation("RequestStatusesOrders");
                });

            modelBuilder.Entity("BPMFlow.Domain.Models.Entities.BPMFlow.RequestStatus", b =>
                {
                    b.Navigation("AssignedRequests");

                    b.Navigation("RequestStatusTransitions");

                    b.Navigation("RequestStatusesOrders");
                });

            modelBuilder.Entity("BPMFlow.Domain.Models.Entities.PerfManagement1.Action", b =>
                {
                    b.Navigation("RoleAllowedActions");
                });

            modelBuilder.Entity("BPMFlow.Domain.Models.Entities.PerfManagement1.Employee", b =>
                {
                    b.Navigation("EmployeeRoles");
                });

            modelBuilder.Entity("BPMFlow.Domain.Models.Entities.PerfManagement1.EntityStatus", b =>
                {
                    b.Navigation("AssignedRequests");
                });

            modelBuilder.Entity("BPMFlow.Domain.Models.Entities.PerfManagement1.Role", b =>
                {
                    b.Navigation("EmployeeRoles");

                    b.Navigation("RequestStatusTransitions");

                    b.Navigation("RequestStatuses");

                    b.Navigation("RoleAllowedActions");
                });

            modelBuilder.Entity("BPMFlow.Domain.Models.Entities.PerfManagement1.RoleType", b =>
                {
                    b.Navigation("Roles");
                });
#pragma warning restore 612, 618
        }
    }
}
